{"version":3,"sources":["Components/Searchbar/SearchBar.jsx","Servises/ImageAPI.jsx","Components/Loader/Loader.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ModalWindow/ModalWindow.jsx","Components/Button/Button.jsx","Components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["SearchBar","onSubmit","useState","inputValue","setinputValue","className","event","preventDefault","trim","alert","type","autocomplete","autofocus","placeholder","onChange","currentTarget","value","toLowerCase","fetchPictures","page","axios","get","then","r","data","hits","Loader","size","ImageGalleryItem","webformatURL","onOpen","largeImageURL","onClick","src","alt","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","target","window","addEventListener","this","removeEventListener","createPortal","children","Component","Button","onLoadMoreClick","Status","ImageGallery","setPage","pictures","setPictures","largeUrl","setLargeUrl","showModal","setShowModal","status","setStatus","useEffect","fetchedPictures","length","catch","error","REJECTED","evt","toggleModal","takeModalPicture","url","map","picture","id","prevPage","App","setInputValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4dc319dd.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function SearchBar({ onSubmit }) {\r\n  const [inputValue, setinputValue] = useState('');\r\n\r\n  const handleNameChange = event => {\r\n    setinputValue(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (inputValue.trim() === '') {\r\n      alert('Enter something');\r\n      return;\r\n    }\r\n\r\n    onSubmit(inputValue);\r\n    setinputValue('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autocomplete=\"off\"\r\n          autofocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst apiKey = '23201132-c06471d6b76c1dab4fe3668e8';\r\nconst baseApi = 'https://pixabay.com/api/';\r\nexport function fetchPictures(inputValue, page) {\r\n  return axios\r\n    .get(\r\n      `${baseApi}?q=${inputValue}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(r => r.data.hits);\r\n}\r\n","import { ImSpinner } from 'react-icons/im';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div>\r\n        <ImSpinner size=\"32\" className=\"icon-spin\" />\r\n        Loading...\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({\r\n  webformatURL,\r\n  onOpen,\r\n  largeImageURL,\r\n}) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={() => onOpen(largeImageURL)}>\r\n      <img src={webformatURL} alt=\"nice\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  onOpen: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nexport default function Button({ onLoadMoreClick }) {\r\n  return (\r\n    <div className=\"more\">\r\n      <button type=\"submit\" className=\"Button\" onClick={onLoadMoreClick}>\r\n        Load More\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMoreClick: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchPictures } from '../../Servises/ImageAPI';\r\nimport Loader from '../Loader/Loader';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Modal from '../ModalWindow/ModalWindow';\r\nimport Button from '../Button/Button';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  REJECTED: 'rejected',\r\n  RESOLVED: 'resolved',\r\n};\r\n\r\nexport default function ImageGallery({ inputValue }) {\r\n  const [page, setPage] = useState(1);\r\n  const [pictures, setPictures] = useState([]);\r\n  const [largeUrl, setLargeUrl] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [status, setStatus] = useState('idle');\r\n\r\n  useEffect(() => {\r\n    if (!inputValue) {\r\n      return;\r\n    }\r\n    setStatus(Status.PENDING);\r\n    setPage(1);\r\n    fetchPictures(inputValue, page)\r\n      .then(fetchedPictures => {\r\n        if (fetchedPictures.length === 0) {\r\n          return setStatus(Status.REJECTED);\r\n        }\r\n        setPictures(fetchedPictures);\r\n      })\r\n      .then(setStatus(Status.RESOLVED))\r\n      .catch(error => setStatus(status.REJECTED));\r\n  }, [inputValue]);\r\n\r\n  useEffect(() => {\r\n    if (page === 1) {\r\n      return;\r\n    }\r\n    setStatus(Status.PENDING);\r\n    fetchPictures(inputValue, page)\r\n      .then(fetchedPictures => {\r\n        if (fetchedPictures.length === 0) {\r\n          return setStatus(Status.REJECTED);\r\n        }\r\n        setPictures([...pictures, ...fetchedPictures]);\r\n      })\r\n      .then(setStatus(Status.RESOLVED))\r\n      .catch(evt => setStatus(Status.REJECTED));\r\n  }, [page]);\r\n\r\n  const onLoadMoreClick = () => {\r\n    setPage(prevPage => prevPage + 1);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setLargeUrl(!showModal);\r\n  };\r\n\r\n  const takeModalPicture = url => {\r\n    setLargeUrl(url);\r\n    setShowModal(true);\r\n  };\r\n\r\n  if (status === Status.IDLE) {\r\n    return <h1 className=\"title\">Want a picture?</h1>;\r\n  }\r\n  if (status === Status.PENDING) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (status === Status.REJECTED) {\r\n    return (\r\n      <h1 className=\"title\">\r\n        By searching <span className=\"rejected-span\">{inputValue}</span> we will\r\n        not find pictures on this resource, sorry :()\r\n      </h1>\r\n    );\r\n  }\r\n\r\n  if (status === Status.RESOLVED) {\r\n    return (\r\n      <div>\r\n        <ul className=\"ImageGallery\">\r\n          {pictures.map(picture => (\r\n            <ImageGalleryItem\r\n              key={picture.id}\r\n              webformatURL={picture.webformatURL}\r\n              largeImageURL={picture.largeImageURL}\r\n              onOpen={takeModalPicture}\r\n            />\r\n          ))}\r\n        </ul>\r\n        {showModal && (\r\n          <Modal onClose={toggleModal}>\r\n            <img src={largeUrl} alt=\"modal-img\" />\r\n            <button type=\"button\" onClick={toggleModal}>\r\n              Close Modal\r\n            </button>\r\n          </Modal>\r\n        )}\r\n        <Button onLoadMoreClick={onLoadMoreClick} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  inputValue: PropTypes.string,\r\n};\r\n","// import './App.css';=\r\nimport { useState } from 'react';\r\nimport SearchBar from './Components/Searchbar/SearchBar';\r\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\r\n\r\nexport default function App() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SearchBar onSubmit={setInputValue} />\r\n      <ImageGallery inputValue={inputValue} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}